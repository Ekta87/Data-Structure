// Program for Pre-Order, In-Order, Post-Order Traversal

#include <stdio.h>
#include <stdlib.h>

struct node
{
    char data;
    struct node *left, *right;
};
struct node *MakeNode(char x)
{
    struct node *p;
    p = (struct node *)malloc(sizeof(struct node));
    p->data = x;
    p->left = NULL;
    p->right = NULL;
    return p;
}

void PreOrderTraversal(struct node *t)
{
    if ((t != NULL))
    {
        printf("%c ", t->data);
        PreOrderTraversal(t->left);
        PreOrderTraversal(t->right);
    }
}
void InOrderTraversal(struct node *t)
{
    if ((t != NULL))
    {
        InOrderTraversal(t->left);
        printf("%c ", t->data);
        InOrderTraversal(t->right);
    }
}

void PostOrderTraversal(struct node *t)
{
    if ((t != NULL))
    {
        PostOrderTraversal(t->left);
        PostOrderTraversal(t->right);
        printf("%c ", t->data);
    }
}

void main()
{
    struct node *root = NULL;
    root = MakeNode('A');
    root->left = MakeNode('B');
    root->right = MakeNode('C');
    root->left->left = MakeNode('F');
    root->right->left = MakeNode('D');
    root->right->right = MakeNode('E');
    printf("Pre Order: ");
    PreOrderTraversal(root);
    printf("\n");
    printf("In Order: ");
    InOrderTraversal(root);
    printf("\n");
    printf("Post Order: ");
    PostOrderTraversal(root);
}
